// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/diagnostics/[[...slug]]" | "/finance/[[...slug]]" | "/hr/[[...slug]]" | "/inpatient/[[...slug]]" | "/operation-theater/[[...slug]]" | "/outpatient/[[...slug]]" | "/pharmacy/[[...slug]]" | "/purchasing/[[...slug]]" | "/rostering/[[...slug]]"
type AppRouteHandlerRoutes = "/api" | "/api/core/appointments" | "/api/core/billing" | "/api/core/consultations" | "/api/inpatient/admissions"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = "/api/auth/[[...path]]" | "/api/diagnostics/[[...path]]" | "/api/finance/[[...path]]" | "/api/hr/[[...path]]" | "/api/inpatient/[[...path]]" | "/api/operation-theater/[[...path]]" | "/api/outpatient/[[...path]]" | "/api/pharmacy/[[...path]]" | "/api/purchasing/[[...path]]" | "/api/rostering/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api": {}
  "/api/auth/[[...path]]": { "path"?: string[]; }
  "/api/core/appointments": {}
  "/api/core/billing": {}
  "/api/core/consultations": {}
  "/api/diagnostics/[[...path]]": { "path"?: string[]; }
  "/api/finance/[[...path]]": { "path"?: string[]; }
  "/api/hr/[[...path]]": { "path"?: string[]; }
  "/api/inpatient/[[...path]]": { "path"?: string[]; }
  "/api/inpatient/admissions": {}
  "/api/operation-theater/[[...path]]": { "path"?: string[]; }
  "/api/outpatient/[[...path]]": { "path"?: string[]; }
  "/api/pharmacy/[[...path]]": { "path"?: string[]; }
  "/api/purchasing/[[...path]]": { "path"?: string[]; }
  "/api/rostering/[[...path]]": { "path"?: string[]; }
  "/diagnostics/[[...slug]]": { "slug"?: string[]; }
  "/finance/[[...slug]]": { "slug"?: string[]; }
  "/hr/[[...slug]]": { "slug"?: string[]; }
  "/inpatient/[[...slug]]": { "slug"?: string[]; }
  "/operation-theater/[[...slug]]": { "slug"?: string[]; }
  "/outpatient/[[...slug]]": { "slug"?: string[]; }
  "/pharmacy/[[...slug]]": { "slug"?: string[]; }
  "/purchasing/[[...slug]]": { "slug"?: string[]; }
  "/rostering/[[...slug]]": { "slug"?: string[]; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
